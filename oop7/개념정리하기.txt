1. 클래스와 객체
클래스는 객체를 만들기 위한 설계도다
클래스는 속성과 기능을 포함하고있다.
객체는 클래스를 이용해서 메모리에 생성된다.
클래스에 정의된 모든 속성, 모든 기능은 객체 생성후에만 사용할 수있다.
생성된 객체의 모든 속성 모든 기능에 접금하기 위해서는 그객체를 참조하는
참조변수를 활용해야한다.

2. 참조변수
클래스타입의 변수다
생성된 객체의 참조값을 저장하고있다
대게 new 연산자가 객체 생성후 반환하는 참조값을 저장한다.
참조변수.속성명
참조변수.메소드명() 과 같은 형식으로 객체의 속성, 기능을 사용한다

3. 생성자가 생성되는 시점
생성자는 객체를 생성하는 new 연산자 다음에 표시한다.
(new연산자로밖에 실행할 방법이없다.)
객체생성 직후에 실행된다.

4. 생성자의 역할
객체 생성 직후에 수행할 작업을 정의한다
-보통 멤버변수 초기화로 많이쓰인다
-리소스(자원) 연결작업에도 많이쓰인다.
-환경설정정보 로딩작업에도 쓰임

5. this
객체가 기본 내장하고있는 속성이며
객체자기 자신을 참조하는 값을 가지고있다.
객체내부의 기능을 사용할때 주로사용한다.
사용법 : this.속성명, this.메소드명()

6. 메소드 중복정의(오버로딩) 사용하는이유.
하나의 클래스 안에 매개변수를 달리하는 메소드를 여러개 정의하는것.
기능의 수행에 필요한 데이터 갯수, 타입만 다를뿐 처리작업이 유사한 작업들은
같은 이름의 메소드로 정의함으로써 기능 수행에 일관성을 가지게한다.

7. 은닉화를 시키는방법
은닉화하는이유 : 속성(데이터)의 무결성을 위해서 데이터의 값의 임의조작을 방지하고자 하는것.
사용법 : 접근제한자 
private를 붙인다.



8. 상속을 사용하는이유
비슷한기능을 매번 정의할필요없요가 없어져 간편해지고,
같은그릇에 자식과 부모의 객체를 모두 담을수있어서

9. 클래스의 형변환이란
부모클래스로 만들어진 그릇에 자식객체를 담을수있고 ( 자동형변환 )
부모그릇에 담겨진 자식객체의 고유기능을 사용할때 사용한다. ( 수동 )
상속(구현)관계에 있는 클래스들 간에만 형변환이 가능하다.


10. 클래스의 형변환이 이루어지는 예
class A < 부모클래스 class B < 자식클래스로 가정함.

A a1 = new B;   >>  부모그릇에 자식형태의 객체를 담음 ( 자동형변환 )

((a) b).기능명(); 자식객체에담긴 기능을 사용함 ( 수동형변환 ) 



11 메소드 재정의(오버라이딩)을 사용하는 이유

부모클래스의 기능이 자식객체에 사용하기 적합하지않지만
메소드명은 같게 쓰고싶을때.



12. 부모 객체와 자식 객체를 임의로 지정하고 super를 활용해서 그림으로 표현해보기.

